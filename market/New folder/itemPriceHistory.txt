import { APP_CONFIG, appState } from './marketConfig.js';

let chartInstance = null;
let debounceTimer;

// ðŸ“ˆ Fetch 365-day price history for a single item

export async function fetchMarketHistory(typeID, selectedRegion) {
    // 1) Resolve regionID
    let regionID = APP_CONFIG.DEFAULT_REGION_ID;

    regionID = Number(selectedRegion) || APP_CONFIG.DEFAULT_REGION_ID;



    // 2) Build and fire the URL
    const url = `${APP_CONFIG.ESI_BASE_URL}${regionID}/history/?type_id=${typeID}`;
    try {
        const res = await fetch(url);
        if (!res.ok) throw new Error(`HTTP ${res.status}`);
        const json = await res.json();
        if (!Array.isArray(json)) throw new Error(`Bad format for ${typeID}`);

        // 3) Keep the last 365 records
        appState.marketHistory = appState.marketHistory || {};
        appState.marketHistory[typeID] = json.slice(-365);
    }
    catch (err) {
        console.error(`History fetch failed for ${typeID}:`, err);
        appState.marketHistory = appState.marketHistory || {};
        appState.marketHistory[typeID] = [];
    }
}


// ðŸ§  Compute Moving Average
function computeMovingAverage(data, key, period) {
    const result = [];
    for (let i = 0; i < data.length; i++) {
        if (i < period - 1) {
            result.push(null);
            continue;
        }
        const slice = data.slice(i - period + 1, i + 1);
        const avg = slice.reduce((sum, d) => sum + d[key], 0) / period;
        result.push(avg);
    }
    return result;
}

// ðŸ§­ Toggle between Market and History views
export function setHistoryViewActive(isActive) {
    const historyPanel = document.getElementById('itemHistorySection');
    const marketPanel = document.getElementById('itemPriceTables');

    if (isActive) {
        historyPanel?.classList.remove('hidden');
        historyPanel?.classList.add('.hidden');

        marketPanel?.classList.add('hidden');
        marketPanel?.classList.remove('.hidden');
    } else {
        marketPanel?.classList.remove('hidden');
        marketPanel?.classList.add('.hidden');

        historyPanel?.classList.add('hidden');
        historyPanel?.classList.remove('.hidden');
    }

    document.getElementById('viewMarketLink')?.classList.toggle('active', !isActive);
    document.getElementById('viewHistoryLink')?.classList.toggle('active', isActive);
}


